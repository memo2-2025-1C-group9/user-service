services:
  user-auth-test:
    build: .
    command: /entrypoint.sh test
    environment:
      - ENVIRONMENT=test
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=require
    volumes:
      - .:/app
      - /tmp/render-ca.crt:/tmp/render-ca.crt
    profiles:
      - test
    env_file:
      - .env.development

  user-auth:
    build: .
    command: /entrypoint.sh app
    environment:
      - ENVIRONMENT=development
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=require
      - DD_AGENT_HOST=datadog-agent
      - DD_SERVICE=app
      - DD_ENV=${ENVIRONMENT}
    ports:
      - "8000:8000"
    volumes:
      - /tmp/render-ca.crt:/tmp/render-ca.crt
    networks:
      - datadog-agent-monitoring
    profiles:
      - app
    env_file:
      - .env.development

networks:
  datadog-agent-monitoring:
    external: true